'use client'

import { useState, useEffect } from 'react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Progress } from "@/components/ui/progress"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import { Trophy, Star, Target, Map, Clock, Users, Award } from 'lucide-react'

interface Achievement {
  id: string
  name: string
  description: string
  icon: JSX.Element
  progress: number
  maxProgress: number
  dateEarned?: string
}

interface Badge {
  id: string
  name: string
  icon: JSX.Element
  rarity: 'common' | 'rare' | 'epic' | 'legendary'
  dateEarned: string
}

export default function Component() {
  const [achievements, setAchievements] = useState<Achievement[]>([
    {
      id: '1',
      name: 'First Hunt',
      description: 'Complete your first scavenger hunt',
      icon: <Trophy className="h-6 w-6" />,
      progress: 1,
      maxProgress: 1,
      dateEarned: '2024-01-15'
    },
    {
      id: '2',
      name: 'Explorer',
      description: 'Visit 10 different locations',
      icon: <Map className="h-6 w-6" />,
      progress: 7,
      maxProgress: 10
    },
    {
      id: '3',
      name: 'Speed Runner',
      description: 'Complete a hunt in under 30 minutes',
      icon: <Clock className="h-6 w-6" />,
      progress: 1,
      maxProgress: 1,
      dateEarned: '2024-01-20'
    }
  ])

  const [badges, setBadges] = useState<Badge[]>([
    {
      id: '1',
      name: 'Master Detective',
      icon: <Star className="h-6 w-6" />,
      rarity: 'legendary',
      dateEarned: '2024-01-15'
    },
    {
      id: '2',
      name: 'Team Player',
      icon: <Users className="h-6 w-6" />,
      rarity: 'rare',
      dateEarned: '2024-01-20'
    }
  ])

  const rarityColors = {
    common: 'bg-slate-500',
    rare: 'bg-blue-500',
    epic: 'bg-purple-500',
    legendary: 'bg-amber-500'
  }

  return (
    <div className="container mx-auto py-8 px-4">
      <div className="grid gap-8 md:grid-cols-[300px_1fr]">
        {/* Profile Summary */}
        <div className="space-y-6">
          <Card>
            <CardContent className="pt-6">
              <div className="flex flex-col items-center space-y-4">
                <Avatar className="h-24 w-24">
                  <AvatarImage src="/placeholder.svg" />
                  <AvatarFallback>JD</AvatarFallback>
                </Avatar>
                <div className="text-center">
                  <h2 className="text-xl font-bold">John Doe</h2>
                  <p className="text-sm text-muted-foreground">Computer Science</p>
                  <p className="text-sm text-muted-foreground">Final Year</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Statistics</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex justify-between items-center">
                <span className="text-sm">Hunts Completed</span>
                <span className="font-bold">12</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Total Points</span>
                <span className="font-bold">1,250</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Achievements</span>
                <span className="font-bold">7/20</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Badges</span>
                <span className="font-bold">4</span>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Main Content */}
        <div className="space-y-6">
          <Tabs defaultValue="achievements">
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="achievements">Achievements</TabsTrigger>
              <TabsTrigger value="badges">Badges</TabsTrigger>
            </TabsList>

            <TabsContent value="achievements" className="space-y-4">
              {achievements.map((achievement) => (
                <Card key={achievement.id}>
                  <CardContent className="pt-6">
                    <div className="flex items-start gap-4">
                      <div className="rounded-lg bg-primary/10 p-2">
                        {achievement.icon}
                      </div>
                      <div className="flex-1 space-y-2">
                        <div className="flex items-center justify-between">
                          <h3 className="font-semibold">{achievement.name}</h3>
                          {achievement.dateEarned && (
                            <Badge variant="secondary">
                              Earned {new Date(achievement.dateEarned).toLocaleDateString()}
                            </Badge>
                          )}
                        </div>
                        <p className="text-sm text-muted-foreground">
                          {achievement.description}
                        </p>
                        <div className="space-y-1">
                          <Progress
                            value={(achievement.progress / achievement.maxProgress) * 100}
                            className="h-2"
                          />
                          <p className="text-xs text-muted-foreground">
                            {achievement.progress} / {achievement.maxProgress}
                          </p>
                        </div>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </TabsContent>

            <TabsContent value="badges" className="space-y-4">
              <div className="grid gap-4 sm:grid-cols-2">
                {badges.map((badge) => (
                  <Card key={badge.id}>
                    <CardContent className="pt-6">
                      <div className="flex items-center gap-4">
                        <div className={`rounded-lg p-2 ${rarityColors[badge.rarity]}`}>
                          {badge.icon}
                        </div>
                        <div className="flex-1">
                          <h3 className="font-semibold">{badge.name}</h3>
                          <p className="text-sm text-muted-foreground capitalize">
                            {badge.rarity} Badge
                          </p>
                          <p className="text-xs text-muted-foreground">
                            Earned {new Date(badge.dateEarned).toLocaleDateString()}
                          </p>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </div>
  )
}
